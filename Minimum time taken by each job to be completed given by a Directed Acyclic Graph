#include <iostream>
#include<bits/stdc++.h>
#include<vector>
#include<queue>
using namespace std;

int main() {
	
	int t;
	cin>>t;
	while(t--)
	{
	    int v,e,i,j;
	    cin>>v>>e;
	    vector<int>adj[v+1];
	    vector<int>inorder(v+1,0),ans(v+1);
	    queue<int>q;
	    for(i=0;i<e;i++)
	    {
	        int x,y;
	        cin>>x>>y;
	        adj[x].push_back(y);
	        inorder[y]++;                     //inorder gives number of jobs the current job depends upon
	    }
	    for(i=1;i<=v;i++)
	    {
	        if(inorder[i]==0)
	        {
	            q.push(i); 
	            ans[i]=1;
	        }
	                               // independent jobs having inorder zero are solved first 
	                                       //  hence pushed in queue first
	    }
	    
	    while(!q.empty())
	    {
	        int tmp=q.front();
	        q.pop();
	        for(i=0;i<adj[tmp].size();i++)
	        {
	            inorder[adj[tmp][i]]--;
	            if(inorder[adj[tmp][i]]==0)
	            {
	                ans[adj[tmp][i]]=ans[tmp]+1;
	                q.push(adj[tmp][i]);
	            }
	        }
	    }
	    for(i=1;i<=v;i++)
	    cout<<ans[i]<<" ";
	    
	}
	return 0;
}
